{
	"name": "df_change_column_names_Montgomery",
	"properties": {
		"folder": {
			"name": "Final_Project_DADABI"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_txtfile_montgomery_crashes",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_txtfile_Montgomery_corrected_columns",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Report Number} as string,",
				"          {Local Case Number} as integer,",
				"          {Agency Name} as string,",
				"          {ACRS Report Type} as string,",
				"          {Crash Date/Time} as string,",
				"          {Hit/Run} as boolean,",
				"          {Route Type} as string,",
				"          {Lane Direction} as string,",
				"          {Lane Type} as string,",
				"          {Number of Lanes} as short,",
				"          Direction as string,",
				"          Distance as double,",
				"          {Distance Unit} as string,",
				"          {Road Grade} as string,",
				"          {Road Name} as string,",
				"          {Cross-Street Name} as string,",
				"          {Off-Road Description} as string,",
				"          Municipality as string,",
				"          {Related Non-Motorist} as string,",
				"          {At Fault} as string,",
				"          {Collision Type} as string,",
				"          Weather as string,",
				"          {Surface Condition} as string,",
				"          Light as string,",
				"          {Traffic Control} as string,",
				"          {Driver Substance Abuse} as string,",
				"          {Non-Motorist Substance Abuse} as string,",
				"          {First Harmful Event} as string,",
				"          {Second Harmful Event} as string,",
				"          Junction as string,",
				"          {Intersection Type} as string,",
				"          {Road Alignment} as string,",
				"          {Road Condition} as string,",
				"          {Road Division} as string,",
				"          Latitude as double,",
				"          Longitude as double,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Report_Number = {Report Number},",
				"          Local_Case_Number = {Local Case Number},",
				"          Agency_Name = {Agency Name},",
				"          ACRS_Report_Type = {ACRS Report Type},",
				"          Crash_Date_Time = {Crash Date/Time},",
				"          Hit_and_Run = {Hit/Run},",
				"          Route_Type = {Route Type},",
				"          Lane_Direction = {Lane Direction},",
				"          Lane_Type = {Lane Type},",
				"          Number_of_Lanes = {Number of Lanes},",
				"          Direction,",
				"          Distance,",
				"          Distance_Unit = {Distance Unit},",
				"          Road_Grade = {Road Grade},",
				"          Road_Name = {Road Name},",
				"          Cross_Street_Name = {Cross-Street Name},",
				"          Off_Road_Description = {Off-Road Description},",
				"          Municipality,",
				"          Related_Non_Motorist = {Related Non-Motorist},",
				"          At_Fault = {At Fault},",
				"          Collision_Type = {Collision Type},",
				"          Weather,",
				"          Surface_Condition = {Surface Condition},",
				"          Light,",
				"          Traffic_Control = {Traffic Control},",
				"          Driver_Substance_Abuse = {Driver Substance Abuse},",
				"          Non_Motorist_Substance_Abuse = {Non-Motorist Substance Abuse},",
				"          First_Harmful_Event = {First Harmful Event},",
				"          Second_Harmful_Event = {Second Harmful Event},",
				"          Junction,",
				"          Intersection_Type = {Intersection Type},",
				"          Road_Alignment = {Road Alignment},",
				"          Road_Condition = {Road Condition},",
				"          Road_Division = {Road Division},",
				"          Latitude,",
				"          Longitude,",
				"          Location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}