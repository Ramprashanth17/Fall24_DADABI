{
	"name": "df_change_column_names_NYC",
	"properties": {
		"folder": {
			"name": "Final_Project_DADABI"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_txtfile_nyc_crashes",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_txtfile_NYC_crashes_corrected_columns",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {CRASH DATE} as string,",
				"          {CRASH TIME} as string,",
				"          BOROUGH as string,",
				"          {ZIP CODE} as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          {ON STREET NAME} as string,",
				"          {CROSS STREET NAME} as string,",
				"          {OFF STREET NAME} as string,",
				"          {NUMBER OF PERSONS INJURED} as string,",
				"          {NUMBER OF PERSONS KILLED} as string,",
				"          {NUMBER OF PEDESTRIANS INJURED} as string,",
				"          {NUMBER OF PEDESTRIANS KILLED} as string,",
				"          {NUMBER OF CYCLIST INJURED} as string,",
				"          {NUMBER OF CYCLIST KILLED} as string,",
				"          {NUMBER OF MOTORIST INJURED} as string,",
				"          {NUMBER OF MOTORIST KILLED} as string,",
				"          {CONTRIBUTING FACTOR VEHICLE 1} as string,",
				"          {CONTRIBUTING FACTOR VEHICLE 2} as string,",
				"          {CONTRIBUTING FACTOR VEHICLE 3} as string,",
				"          {CONTRIBUTING FACTOR VEHICLE 4} as string,",
				"          {CONTRIBUTING FACTOR VEHICLE 5} as string,",
				"          COLLISION_ID as string,",
				"          {VEHICLE TYPE CODE 1} as string,",
				"          {VEHICLE TYPE CODE 2} as string,",
				"          {VEHICLE TYPE CODE 3} as string,",
				"          {VEHICLE TYPE CODE 4} as string,",
				"          {VEHICLE TYPE CODE 5} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> source1",
				"source1 select(mapColumn(",
				"          CRASH_DATE = {CRASH DATE},",
				"          CRASH_TIME = {CRASH TIME},",
				"          BOROUGH,",
				"          ZIP_CODE = {ZIP CODE},",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          LOCATION,",
				"          ON_STREET_NAME = {ON STREET NAME},",
				"          CROSS_STREET_NAME = {CROSS STREET NAME},",
				"          OFF_STREET_NAME = {OFF STREET NAME},",
				"          NUMBER_OF_PERSONS_INJURED = {NUMBER OF PERSONS INJURED},",
				"          NUMBER_OF_PERSONS_KILLED = {NUMBER OF PERSONS KILLED},",
				"          NUMBER_OF_PEDESTRIANS_INJURED = {NUMBER OF PEDESTRIANS INJURED},",
				"          NUMBER_OF_PEDESTRIANS_KILLED = {NUMBER OF PEDESTRIANS KILLED},",
				"          NUMBER_OF_CYCLIST_INJURED = {NUMBER OF CYCLIST INJURED},",
				"          NUMBER_OF_CYCLIST_KILLED = {NUMBER OF CYCLIST KILLED},",
				"          NUMBER_OF_MOTORIST_INJURED = {NUMBER OF MOTORIST INJURED},",
				"          NUMBER_OF_MOTORIST_KILLED = {NUMBER OF MOTORIST KILLED},",
				"          CONTRIBUTING_FACTOR_VEHICLE_1 = {CONTRIBUTING FACTOR VEHICLE 1},",
				"          CONTRIBUTING_FACTOR_VEHICLE_2 = {CONTRIBUTING FACTOR VEHICLE 2},",
				"          CONTRIBUTING_FACTOR_VEHICLE_3 = {CONTRIBUTING FACTOR VEHICLE 3},",
				"          CONTRIBUTING_FACTOR_VEHICLE_4 = {CONTRIBUTING FACTOR VEHICLE 4},",
				"          CONTRIBUTING_FACTOR_VEHICLE_5 = {CONTRIBUTING FACTOR VEHICLE 5},",
				"          COLLISION_ID,",
				"          VEHICLE_TYPE_CODE_1 = {VEHICLE TYPE CODE 1},",
				"          VEHICLE_TYPE_CODE_2 = {VEHICLE TYPE CODE 2},",
				"          VEHICLE_TYPE_CODE_3 = {VEHICLE TYPE CODE 3},",
				"          VEHICLE_TYPE_CODE_4 = {VEHICLE TYPE CODE 4},",
				"          VEHICLE_TYPE_CODE_5 = {VEHICLE TYPE CODE 5}",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['NYC_Columns_Corrected.tsv'],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}